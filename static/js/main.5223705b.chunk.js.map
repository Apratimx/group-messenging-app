{"version":3,"sources":["firebase.js","StateProvider.js","Chat/Chat.js","Sidebar/Sidebarchat.js","Sidebar/Sidebar.js","reducer.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","console","log","collection","doc","onSnapshot","snapshot","data","Name","orderBy","docs","map","className","Avatar","IconButton","name","displayName","message","placeholder","onChange","e","target","type","onClick","preventDefault","add","timestamp","Date","getTime","Sidebarchat","id","addNewChat","setSeed","Math","floor","random","prompt","to","src","Sidebar","rooms","setRooms","photoURL","SearchOutlined","room","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5223705b.chunk.js","sourcesContent":["import firebase from \"firebase\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBgSKqJY9m0HeeO_Sz2EztU_aDTgS2Uws8\",\n  authDomain: \"messenging-second.firebaseapp.com\",\n  projectId: \"messenging-second\",\n  storageBucket: \"messenging-second.appspot.com\",\n  messagingSenderId: \"526290057292\",\n  appId: \"1:526290057292:web:e8bbc7cfb0cb83b3e31ce9\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n//implicit export\nexport{ auth, provider};\n//explicit export\nexport default db;","import React, {createContext, useContext, useReducer} from \"react\"\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({reducer, initialState, children}) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n\n","import { Avatar, IconButton } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\nimport InsertEmoticonRoundedIcon from '@material-ui/icons/InsertEmoticonRounded';\nimport \"./Chat.css\"\nimport MicRoundedIcon from '@material-ui/icons/MicRounded';\nimport {useParams} from 'react-router-dom'\nimport db from '../firebase';\nimport { useStateValue } from '../StateProvider';\nimport firebase from \"../firebase\"\n\n///FIREBASEEEEEEE\n\nfunction Chat() {\n    const[input, setInput] = useState(\"\");\n    const {roomId} = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n    \n    useEffect(()=> {\n        if(roomId){\n            console.log(\"id foind\")\n            \n            db.collection('Rooms')\n            .doc(roomId)\n            .onSnapshot((snapshot) => setRoomName\n                (snapshot.data().Name));\n\n            db.collection('Rooms')\n            .doc(roomId)\n            .collection(\"messages\")\n            .orderBy('timestamp', 'desc')\n            .onSnapshot(snapshot => (\n                setMessages(snapshot.docs.map((doc) => doc.data()))\n            ))   \n        }\n    }, [roomId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log(\"you typed >>>\", input);\n        \n        db.collection(\"Rooms\").doc(roomId).collection(\"messages\").add({\n            message:input,\n            name: user.displayName,\n            timestamp: new Date().getTime()\n        })\n        \n        setInput(\"\");\n    }\n\n\n\n    return (\n        <div className=\"chat\">\n            <div className = \"chat_header\">\n                <Avatar/>\n                <div className = \"chat_headerinfo\">\n                    <h3>{roomName}</h3>\n                    <p>last seen at ...</p>    \n                </div>\n                <div className = \"chat_header_icons\">\n                \n                    <IconButton>\n                        <SearchRoundedIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <AttachFileRoundedIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertRoundedIcon/>\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat_body\">\n                    {messages.map((messages => (\n                     <p className = {`chat_message ${messages.name === user.displayName && \"chat_reciever\"}`} >\n                        <span className =\"chat_name\">{messages.name}</span>\n                        {messages.message}\n                        <span className=\"chat_timestamp\">\"just now\"</span>\n                 </p>   \n                    )))}\n                    \n            </div>\n\n            <div className = \"chat_footer\">\n                    <InsertEmoticonRoundedIcon/>\n                    <form>\n                        <input value = {input}\n                        placeholder=\"Type a message\" \n                        // setting input in memory\n                        onChange = {(e) => setInput(e.target.value)}\n                        type = \"text\" />\n                        <button onClick = {sendMessage} type = \"submit\">Send a message</button>\n                    </form>\n                    <MicRoundedIcon/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Chat; ","import { Avatar } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport db from '../firebase';\nimport {Link} from \"react-router-dom\";\nimport \"./sidebarChat.css\"\nfunction Sidebarchat({id, name, addNewChat}) {\n    const [seed, setSeed] = useState(\"\");\n    \n    //runs code when starts up\n    useEffect(() => {\n        setSeed(Math.floor(Math.random()*5000));\n    },[])\n    \n    const createChat = () => {\n        const roomName = prompt(\"please enter your name!\");\n\n        if (roomName){\n\n        db.collection(\"Rooms\").add({\n            Name: roomName,\n        })\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to = {`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n            <Avatar src = {`http://avatars.dicebear.com/api/human/${id}.svg`}/>\n            <div className =\"sidebarChat_info\">\n                <h2>{name}</h2>\n                <p>This is the last message on the room</p>\n            </div>\n        </div>\n\n        </Link> \n        \n    ) : (\n        <div onClick = {createChat}\n            className =\"SidebarChat\">\n                <h2>Add new chat!</h2>\n            </div>\n    );\n}\n\nexport default Sidebarchat\n","import { Avatar, IconButton } from '@material-ui/core';\nimport { SearchOutlined } from '@material-ui/icons';\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\nimport React, {useState, useEffect} from 'react'\nimport Sidebarchat from \"./Sidebarchat\"\nimport \"./Sidebar.css\"\nimport db from \"../firebase\"\nimport { useStateValue } from '../StateProvider';\n\nfunction Sidebar () {\n    const [rooms, setRooms] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n    //empty dependecy says load it only once\n    useEffect(() => {\n        //go to rooms collection, take a pic of the list of rooms\n        // on any changes in that snapshot run this code. \n        db.collection(\"Rooms\").onSnapshot((snapshot) => (\n            setRooms(snapshot.docs.map((doc) => ({\n                id:doc.id,\n                data:doc.data(),\n            }))\n            ))\n        );\n        \n    }, [])\n    \n    return (\n\n        <div className=\"sidebar\">\n            {/* has sidebar header, search, chats */}\n            <div className=\"sidebar_header\">\n                <Avatar src = {user?.photoURL}/>\n                <div className=\"sidebar_header_icons\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatRoundedIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertRoundedIcon/>\n                    </IconButton>\n\n                </div>\n            </div>\n\n            <div className = \"sidebar_search\"> \n                <div className = \"sidebar_search_container\">\n                    <SearchOutlined/>\n                    <input placeholder=\"Search or start new chat\" type=\"text\"/>\n                </div>   \n            </div>\n            \n            <Sidebarchat addNewChat/>\n            <div className=\"sidebar_chat\">\n                {rooms.map(room => (\n                    <Sidebarchat key = {room.id} id ={room.id} \n                    name = {room.data.Name} />\n                ))}\n\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n\n","export const initialState ={\n    user: null\n}\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => { \n    console.log(action);\n    switch(action.type){\n        case actionTypes.SET_USER:\n            return{\n                ...state,\n                user: action.user,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { Button } from '@material-ui/core'\nimport React from 'react'\nimport { auth, provider } from './firebase'\nimport \"./login.css\"\nimport { actionTypes } from './reducer'\nimport { useStateValue } from './StateProvider'\nfunction Login() {\n    const [{}, dispatch ] = useStateValue();\n    \n    const signIn = () =>{\n        auth\n        .signInWithPopup(provider)\n        .then((result) =>{\n            dispatch({\n                type: actionTypes.SET_USER,\n                user: result.user,\n            })\n            ;\n        })\n        .catch((error)=> alert(error.message));\n    };\n    \n    \n    return ( \n       \n       <div className = \"login\">\n            <div className = \"login_container\">\n                <div className = \"login_text\">\n                    <h1>Sign in</h1>\n                </div>\n                <Button onClick={signIn}>\n                    Sign in with Google\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import './App.css';\nimport Chat from './Chat/Chat';\nimport Sidebar from './Sidebar/Sidebar';\nimport {BrowserRouter as Router, Switch, Route}  from \"react-router-dom\"\nimport { useState } from 'react';\nimport Login from './login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() { \n  const [{user}, dispatch] = useStateValue();\n  return (\n    <div className = \"App\">\n      {!user ? (\n        <Login/>\n      ):(\n      <div className=\"app_body\"> \n      <Router>\n      <Sidebar/>\n        <Switch>\n            <Route path = \"/rooms/:roomId\">\n              <Chat/>\n            </Route>\n            <Route path = \"/\">\n                  <Chat/>\n            </Route>\n        </Switch>\n      </Router>\n      \n      </div>)}\n    </div>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from \"./reducer\"\nimport { StateProvider} from \"./StateProvider\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState = {initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}